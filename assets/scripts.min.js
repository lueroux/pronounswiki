// Performance optimizations
const requestIdleCallback = window.requestIdleCallback || function(cb) {
  return setTimeout(() => {
    const start = Date.now();
    cb({
      didTimeout: false,
      timeRemaining: () => Math.max(0, 50 - (Date.now() - start))
    });
  }, 1);
};

// Lazy loading images
document.addEventListener('DOMContentLoaded', () => {
  const lazyImages = document.querySelectorAll('img[data-src]');
  
  if ('IntersectionObserver' in window) {
    const imageObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const img = entry.target;
          img.src = img.dataset.src;
          img.classList.add('loaded');
          observer.unobserve(img);
        }
      });
    });

    lazyImages.forEach(img => imageObserver.observe(img));
  } else {
    // Fallback for browsers without IntersectionObserver
    lazyImages.forEach(img => {
      img.src = img.dataset.src;
      img.classList.add('loaded');
    });
  }
});

// Accessibility features
function toggleAccessibilityPanel() {
  const panel = document.querySelector('.accessibility-panel');
  panel.classList.toggle('show');
}

function toggleHighContrast() {
  document.body.classList.toggle('high-contrast');
}

function applyColorScheme(scheme) {
  document.body.classList.remove('high-contrast', 'easy-read', 'inverted');
  switch(scheme) {
    case 1:
      document.body.classList.add('easy-read');
      break;
    case 2:
      document.body.classList.add('inverted');
      break;
  }
}

function toggleDyslexiaFriendlyFont() {
  document.body.classList.toggle('dyslexia-friendly');
}

function toggleBoldText() {
  document.body.classList.toggle('bold-text');
}

function resetToDefault() {
  document.body.className = '';
}

// Modal functionality
const modal = document.getElementById('myModal');
const btn = document.getElementById('openModalBtn');
const span = document.getElementById('closeModal');

btn.onclick = function() {
  modal.style.display = 'flex';
  document.body.style.overflow = 'hidden';
}

span.onclick = function() {
  modal.style.display = 'none';
  document.body.style.overflow = '';
}

window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = 'none';
    document.body.style.overflow = '';
  }
}

// Smooth scrolling
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      target.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    }
  });
});

// Service Worker Registration
if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/sw.js')
      .then(registration => {
        console.log('ServiceWorker registration successful');
      })
      .catch(err => {
        console.log('ServiceWorker registration failed: ', err);
      });
  });
}

// Performance monitoring
if ('performance' in window) {
  requestIdleCallback(() => {
    const perfData = window.performance.timing;
    const pageLoadTime = perfData.loadEventEnd - perfData.navigationStart;
    const domLoadTime = perfData.domComplete - perfData.domLoading;
    
    console.log('Page load time:', pageLoadTime, 'ms');
    console.log('DOM load time:', domLoadTime, 'ms');
  });
}

// Error tracking
window.onerror = function(msg, url, lineNo, columnNo, error) {
  console.error('Error:', msg, '\nURL:', url, '\nLine:', lineNo, '\nColumn:', columnNo, '\nError object:', error);
  return false;
};

// Add loading state to buttons
document.querySelectorAll('button').forEach(button => {
  button.addEventListener('click', function() {
    const originalText = this.textContent;
    this.textContent = 'Loading...';
    this.disabled = true;
    
    // Reset button after animation
    setTimeout(() => {
      this.textContent = originalText;
      this.disabled = false;
    }, 1000);
  });
});

// Add keyboard navigation
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    modal.style.display = 'none';
    document.body.style.overflow = '';
  }
});

// Add focus management for accessibility
document.addEventListener('focus', function(e) {
  if (e.target.matches('a, button, input, select, textarea')) {
    e.target.classList.add('focus-visible');
  }
}, true);

document.addEventListener('blur', function(e) {
  if (e.target.matches('a, button, input, select, textarea')) {
    e.target.classList.remove('focus-visible');
  }
}, true);

const preloadedPages={};function preloadPage(url){if(!preloadedPages[url]){fetch(url).then((response)=>response.text()).then((html)=>{const parser=new DOMParser();const doc=parser.parseFromString(html,"text/html");const mainContent=doc.querySelector("main").innerHTML;preloadedPages[url]=mainContent}).catch((err)=>console.error("Failed to preload:",err))}}
function updateMainContent(event,url){event.preventDefault();if(preloadedPages[url]){document.getElementById("main-content").innerHTML=preloadedPages[url];window.history.pushState(null,"",url)}else{fetch(url).then((response)=>response.text()).then((html)=>{const parser=new DOMParser();const doc=parser.parseFromString(html,"text/html");document.getElementById("main-content").innerHTML=doc.querySelector("main").innerHTML;window.history.pushState(null,"",url)}).catch((err)=>console.error("Failed to load page:",err))}}
document.querySelectorAll(".internal-link").forEach((link)=>{const url=link.getAttribute("href");link.addEventListener("mouseover",()=>preloadPage(url));link.addEventListener("click",(event)=>updateMainContent(event,url))})